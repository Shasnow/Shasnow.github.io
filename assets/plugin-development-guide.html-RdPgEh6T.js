import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-5ggn2jRA.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="插件开发指南" tabindex="-1"><a class="header-anchor" href="#插件开发指南"><span>插件开发指南</span></a></h1><p>在本章节中，我们将介绍如何开发一个SRA插件。</p><h2 id="插件介绍" tabindex="-1"><a class="header-anchor" href="#插件介绍"><span>插件介绍</span></a></h2><p>插件是SRA的扩展模块，通过插件可以实现一些特定的功能。插件可以是一个单独的Python文件，也可以是一个包含多个Python文件的文件夹。或用Python调用其他语言。</p><h2 id="插件结构" tabindex="-1"><a class="header-anchor" href="#插件结构"><span>插件结构</span></a></h2><p>一个插件的结构一般如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>plugin_name/</span></span>
<span class="line"><span>    ├── __init__.py</span></span>
<span class="line"><span>    ├── plugin.toml</span></span>
<span class="line"><span>    ├── somepluginfile1.py</span></span>
<span class="line"><span>    ├── somepluginfile2.py</span></span>
<span class="line"><span>    ├── ...</span></span>
<span class="line"><span>    └── src/</span></span>
<span class="line"><span>        ├── config.json</span></span>
<span class="line"><span>        ├── image.png</span></span>
<span class="line"><span>        ├──...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>__init__.py</code>是插件的入口文件，用于初始化插件。<code>somepluginfile1.py</code>、<code>somepluginfile2.py</code>等是插件的具体实现文件。<code>src/</code>文件夹中存放插件所需的资源文件，如配置文件和图片等。</p><p>您也可以自己决定插件结构。</p><h2 id="插件元数据" tabindex="-1"><a class="header-anchor" href="#插件元数据"><span>插件元数据</span></a></h2><p>插件元数据用来描述插件信息，或请求与SRA交互。</p><p>元数据有如下参数：</p><ul><li>displayName：插件的名称</li><li>version：插件的版本号</li><li>author：作者/制作团队</li><li>description：有关插件的描述</li><li>SRAVersion：请求的SRA最低版本</li><li>loadPeriod：加载时机，如果为<code>normal</code>则会在 SRA 运行时直接加载</li><li>enable：是否启用该插件，默认为<code>true</code></li></ul><p>示例如下：</p><ul><li>对于0.8.3及后续版本，元数据存储在<code>plugin.toml</code>文件中</li></ul><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-toml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">displayName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;StarRailAssistant Error Analyzer&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.2 Alpha&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;EveGlowLuna&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;分析SRA运行时错误，以中文提示显示并提供可能的解决方案&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SRAVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.8.2&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">loadPeriod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;normal&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>对于0.8.3前的版本</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;StarRailAssistant Error Analyzer&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                     # 插件的名称</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">VERSION</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.2 Alpha&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                         # 插件的版本</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">DESCRIPTION</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;分析SRA运行时错误&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                               # 插件的描述</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">AUTHOR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;EveGlowLuna&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                        # 插件的作者</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">UI</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">PluginManager.public_ui                                  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 请求的 UI</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="插件-api" tabindex="-1"><a class="header-anchor" href="#插件-api"><span>插件 API</span></a></h2><p>插件API是用于与SRA交互的接口。使用API方法如下：</p><ul><li><code>run()</code>：插件按钮被点击启动时调用的方法。</li><li><code>PluginBase</code>：插件的基类，插件必须继承此类。</li><li><code>PluginManager.register()</code>：注册插件线程。</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>插件必须有一个<code>__init__.py</code>文件。</li><li>插件必须有一个<code>run()</code>函数，即便它什么用也没有。除非<code>loadPeriod</code>被设置为<code>late</code>。</li><li>使用源码的插件尽量仅使用<code>SRA API</code>或<code>Python</code>标准库中的内容。</li></ul></div><h2 id="着手开发一个插件" tabindex="-1"><a class="header-anchor" href="#着手开发一个插件"><span>着手开发一个插件</span></a></h2><h3 id="前置条件" tabindex="-1"><a class="header-anchor" href="#前置条件"><span>前置条件</span></a></h3><ol><li><p>下载源代码</p><ul><li>前往 <a href="https://github.com/Shasnow/StarRailAssistant" target="_blank" rel="noopener noreferrer">https://github.com/Shasnow/StarRailAssistant</a> ，点击<code>Code</code> -&gt; <code>Download ZIP</code>，下载后解压到一个文件夹中 或 使用 <code>git clone https://github.com/Shasnow/StarRailAssistant.git</code> (要求电脑中有 <code>Git</code>)</li><li>前往 <a href="https://github.com/Shasnow/StarRailAssistant/releases" target="_blank" rel="noopener noreferrer">https://github.com/Shasnow/StarRailAssistant/releases</a> ，直接下载<strong>编译好的SRA本体</strong></li></ul></li><li><p>创建插件结构</p><p>在 <em>IDE</em> 或 <em>文件资源管理器</em> 中，打开项目的文件夹，找到\\plugins（或创建plugins文件夹），在\\plugins中创建一个文件夹，文件夹的名称可随意填写，最好体现出您插件的名称/行为。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>文件夹中自带了一个插件： <code>BeautifulLog</code>，您的插件可以仿照此插件来写。</p><p><s>这个插件在新版本中疑似被删除。如果您想下载一个插件作为示例，可以前往<a href="https://starrailassistant.top/pluginstore.html" target="_blank" rel="noopener noreferrer">插件商店</a>下载</s></p></div><p>请注意，文件夹名称最好使用<strong>英文</strong>且<strong>尽量不要使用空格</strong>。</p><p>现在，创建<code>plugin.toml</code>和<code>__init__.py</code>文件，这就是一个基础插件了。</p></li><li><p>填写插件基本信息</p><ul><li><p>在0.8.3后<br> 在文件根目录创建一个<code>plugin.toml</code>文件，在文件中填写插件基本信息。</p></li><li><p>在0.8.3前<br> 在<code>__init__.py</code>文件中填写插件基本信息。</p></li></ul></li></ol><h3 id="开始编写自己的插件内容" tabindex="-1"><a class="header-anchor" href="#开始编写自己的插件内容"><span>开始编写自己的插件内容</span></a></h3><h4 id="最简单的插件" tabindex="-1"><a class="header-anchor" href="#最简单的插件"><span>最简单的插件</span></a></h4><p>在 <code>__init__.py</code> 中添加以下内容：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello, SRA Plugin!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时运行SRA, 你就能在SRA的 <code>拓展/插件</code> 中看到你的插件了。<br> 点击插件按钮, 你会在控制台看到 <code>Hello, SRA Plugin!</code>。</p><h4 id="带独立ui窗口的插件" tabindex="-1"><a class="header-anchor" href="#带独立ui窗口的插件"><span>带独立UI窗口的插件</span></a></h4><p>在 <code>__init__.py</code> 中定义一个类，继承 <code>QWidget</code>，并在类中实现UI逻辑。<br> 例如</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PySide6.QtWidgets </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> QWidget, QPushButton, QVBoxLayout</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.operator </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Operator</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DevTootKit</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">QWidget</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> __init__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">__init__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.operator</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Operator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">setWindowTitle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;DevTootKit&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">setLayout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">QVBoxLayout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.screenshot_button</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">QPushButton</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;截图测试&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">setFixedSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.screenshot_button.clicked.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">screenshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">addWidget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.screenshot_button)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">toot_kit</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">DevTootKit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 全局实例，否则你会看到窗口一闪而过</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    toot_kit.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示窗口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很简单，我们创建了一个窗口，窗口中有一个按钮，点击按钮会调用SRA的截图功能。<br> 现在运行SRA, 你就能在SRA的 <code>拓展/插件</code> 中看到你的插件了。<br> 点击插件按钮, 你会看到一个窗口，窗口中有一个按钮，点击按钮会调用SRA的截图功能，并显示截图。</p><h4 id="自动运行的插件" tabindex="-1"><a class="header-anchor" href="#自动运行的插件"><span>自动运行的插件</span></a></h4><p>如果你想让插件在SRA启动时自动运行，在 <code>__init__.py</code> 中添加以下内容：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    pass</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 这里可以不写任何内容</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这里是自动运行的内容    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;插件已自动运行！&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    took_kit.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时运行SRA, 你会在控制台看到 <code>插件已自动运行！</code>，并且窗口也会自动显示。</p><p>至此，您可以创建一个完整的插件了。编写完成后，您可以提交插件，<s>或等待插件被官方收录</s>。</p>`,39)]))}const d=s(e,[["render",t]]),r=JSON.parse('{"path":"/develop/plugin-development-guide.html","title":"插件开发指南","lang":"zh-CN","frontmatter":{"title":"插件开发指南","icon":"laptop-code","order":6,"description":"插件开发指南 在本章节中，我们将介绍如何开发一个SRA插件。 插件介绍 插件是SRA的扩展模块，通过插件可以实现一些特定的功能。插件可以是一个单独的Python文件，也可以是一个包含多个Python文件的文件夹。或用Python调用其他语言。 插件结构 一个插件的结构一般如下： 其中，__init__.py是插件的入口文件，用于初始化插件。somepl...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"插件开发指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-12T15:44:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"EveGlowLuna\\",\\"url\\":\\"https://github.com/EveGlowLuna\\"}]}"],["meta",{"property":"og:url","content":"https://starrailassistant.top/develop/plugin-development-guide.html"}],["meta",{"property":"og:site_name","content":"StarRailAssistant"}],["meta",{"property":"og:title","content":"插件开发指南"}],["meta",{"property":"og:description","content":"插件开发指南 在本章节中，我们将介绍如何开发一个SRA插件。 插件介绍 插件是SRA的扩展模块，通过插件可以实现一些特定的功能。插件可以是一个单独的Python文件，也可以是一个包含多个Python文件的文件夹。或用Python调用其他语言。 插件结构 一个插件的结构一般如下： 其中，__init__.py是插件的入口文件，用于初始化插件。somepl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-12T15:44:22.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-12T15:44:22.000Z"}]]},"git":{"createdTime":1750390626000,"updatedTime":1757691862000,"contributors":[{"name":"EveGlowLuna","username":"EveGlowLuna","email":"yy15502497613@outlook.com","commits":6,"url":"https://github.com/EveGlowLuna"},{"name":"Shasnow","username":"Shasnow","email":"yukikage@qq.com","commits":2,"url":"https://github.com/Shasnow"}]},"readingTime":{"minutes":4.13,"words":1240},"filePathRelative":"develop/plugin-development-guide.md","autoDesc":true}');export{d as comp,r as data};
