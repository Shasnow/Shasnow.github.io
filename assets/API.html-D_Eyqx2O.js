import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as s,e as l,a as t,n,g as k,r as p,o as d}from"./app-5ggn2jRA.js";const o={};function r(g,i){const a=p("VPBanner");return d(),e("div",null,[i[0]||(i[0]=s("h1",{id:"api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#api"},[s("span",null,"API")])],-1)),i[1]||(i[1]=s("p",null,"此文档介绍StarRailAssistant（SRA）的API接口，涵盖鼠标事件、键盘事件、图像识别、窗口管理等模块的功能和用法。",-1)),l(a,n(k({title:"版本差异",content:"此文档适用于新版 SRA，旧版的 API 文档已过时。如果需要，可以点击下方按钮查看旧版 API 文档。",background:"var(--bg-10)",color:"var(--banner-text)",actions:[{text:"旧版 API 文档",link:"API-old"}]})),null,16),i[2]||(i[2]=t(`<h2 id="operator-模块" tabindex="-1"><a class="header-anchor" href="#operator-模块"><span>operator 模块</span></a></h2><p>operator 模块提供了与游戏窗口交互的功能，包括截图、图像识别、鼠标点击、键盘按键等操作。</p><h1 id="类" tabindex="-1"><a class="header-anchor" href="#类"><span>类：</span></a></h1><h2 id="operator" tabindex="-1"><a class="header-anchor" href="#operator"><span>Operator</span></a></h2><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.operator.Operator</span></span></code></pre></div><p>Operator 是操作游戏窗口的核心类，封装了与游戏窗口交互的各种方法。<br> 要创建<code>Operator</code>，可调用其构造函数。不接收任何参数。</p><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">operator </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Operator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre></div><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h3><ul><li><code>window_title</code> (str)：游戏窗口标题。默认值为<code>&quot;崩坏：星穹铁道&quot;</code>。</li><li><code>gcm</code> (GlobalConfigManager)：全局配置管理器实例。</li><li><code>confidence</code> (float)：图像识别置信度。从 <code>gcm</code> 获取，范围为0.0~1.0。默认值为0.9。</li><li><code>zoom</code> (float)：屏幕缩放比例。从 <code>gcm</code> 获取。默认值为1.25。</li><li><code>active_window</code> (bool)：是否在获取窗口区域时激活窗口。默认值为True。</li></ul><p>一个<code>Operator</code>实例可调用以下方法：</p><h3 id="operator-is-window-active" tabindex="-1"><a class="header-anchor" href="#operator-is-window-active"><span>Operator.is_window_active</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">property</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">is_window_active</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>检查游戏窗口是否为当前活动窗口。</p><p><code>返回值</code>：</p><ul><li><code>True</code>：窗口为当前活动窗口。</li><li><code>False</code>：窗口不为当前活动窗口。</li></ul><h3 id="operator-get-win-region" tabindex="-1"><a class="header-anchor" href="#operator-get-win-region"><span>Operator.get_win_region</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_win_region</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(active_window: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, raise_exception: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Region </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>获取游戏窗口区域。</p><p><code>参数</code>：</p><ul><li><code>active_window</code>：是否在获取时激活窗口。 <ul><li><code>True</code>：获取前激活窗口。</li><li><code>False</code>：获取前不激活窗口。</li><li><code>None</code>：使用当前实例默认值。（默认值为<code>True</code>）</li></ul></li><li><code>raise_exception</code>：是否在获取失败时抛出异常。 <ul><li><code>True</code>：获取失败时抛出异常。</li><li><code>False</code>：获取失败时返回<code>None</code>。</li></ul></li></ul><p><code>返回值</code>：</p><ul><li><code>Region</code>：获取成功，返回窗口区域。</li><li><code>None</code>：获取失败，返回<code>None</code>。</li></ul><p><code>异常</code>：</p><ul><li><code>Exception</code>：未找到游戏窗口 | 窗口未激活 | 获取失败</li></ul><h3 id="operator-screenshot" tabindex="-1"><a class="header-anchor" href="#operator-screenshot"><span>Operator.screenshot</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@overload</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">screenshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(region: Region </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.Image.Image</span></span></code></pre></div><p>截取游戏窗口区域的截图。</p><p><code>参数</code>：</p><ul><li><code>region</code>：截图区域。 <ul><li><code>Region</code>：截图指定区域。</li><li><code>None</code>：截图整个窗口区域。</li></ul></li></ul><p><code>返回值</code>：</p><ul><li><code>PIL.Image.Image</code>：截图成功，返回截图图像。</li></ul><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@overload</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">screenshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(from_x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, from_y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, to_x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, to_y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> PIL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.Image.Image</span></span></code></pre></div><p>截取游戏窗口区域的截图。</p><p><code>参数</code>：</p><ul><li><code>from_x</code>：截图区域左上角的相对X坐标，范围为0.0~1.0。</li><li><code>from_y</code>：截图区域左上角的相对Y坐标，范围为0.0~1.0。</li><li><code>to_x</code>：截图区域右下角的相对X坐标，范围为0.0~1.0。</li><li><code>to_y</code>：截图区域右下角的相对Y坐标，范围为0.0~1.0。</li></ul><p><code>返回值</code>：</p><ul><li><code>PIL.Image.Image</code>：截图成功，返回截图图像。</li></ul><p><code>异常</code>：</p><ul><li><code>ValueError</code>：参数错误</li></ul><h3 id="operator-locate" tabindex="-1"><a class="header-anchor" href="#operator-locate"><span>Operator.locate</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@overload</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">locate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(template: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path, region: Region </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, trace: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Box </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>在游戏窗口区域内查找指定模板图像。</p><p><code>参数</code>：</p><ul><li><code>template</code>：模板图像路径。</li><li><code>region</code>：查找区域。 <ul><li><code>Region</code>：在指定区域内查找。</li><li><code>None</code>：在整个窗口区域内查找。</li></ul></li><li><code>trace</code>：是否显示查找过程。 <ul><li><code>True</code>：显示查找过程。</li><li><code>False</code>：不显示查找过程。</li></ul></li></ul><p><code>返回值</code>：</p><ul><li><code>Box</code>：查找成功，返回模板图像在窗口区域内的位置。</li><li><code>None</code>：查找失败，返回<code>None</code>。</li></ul><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@overload</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">locate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(template: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                from_x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                from_y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                to_x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                to_y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                trace: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Box </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>在游戏窗口区域内查找指定模板图像。</p><p><code>参数</code>：</p><ul><li><code>template</code>：模板图像路径。</li><li><code>from_x</code>：查找区域左上角的相对X坐标，范围为0.0~1.0。</li><li><code>from_y</code>：查找区域左上角的相对Y坐标，范围为0.0~1.0。</li><li><code>to_x</code>：查找区域右下角的相对X坐标，范围为0.0~1.0。</li><li><code>to_y</code>：查找区域右下角的相对Y坐标，范围为0.0~1.0。</li><li><code>trace</code>：是否显示查找过程。 <ul><li><code>True</code>：显示查找过程。</li><li><code>False</code>：不显示查找过程。</li></ul></li></ul><p><code>返回值</code>：</p><ul><li><code>Box</code>：查找成功，返回模板图像在窗口区域内的位置。</li><li><code>None</code>：查找失败，返回<code>None</code>。</li></ul><h3 id="operator-locate-any" tabindex="-1"><a class="header-anchor" href="#operator-locate-any"><span>Operator.locate_any</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@overload</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">locate_any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(templates: list[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    region: Region </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    trace: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tuple[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, Box </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre></div><p>在游戏窗口区域内查找指定模板图像列表中的任意一个。</p><p><code>参数</code>：</p><ul><li><code>templates</code>：模板图像路径列表。</li><li><code>region</code>：查找区域。 <ul><li><code>Region</code>：在指定区域内查找。</li><li><code>None</code>：在整个窗口区域内查找。</li></ul></li><li><code>trace</code>：是否显示查找过程。</li></ul><p><code>返回值</code>：</p><ul><li><code>tuple[int, Box | None]</code>：查找成功，返回找到的模板图像在列表中的索引及其在窗口区域内的位置；查找失败，返回-1及<code>None</code>。</li></ul><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@overload</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">locate_any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(templates: list[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    from_x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    from_y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    to_x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    to_y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    trace: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tuple[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, Box </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre></div><p>在游戏窗口区域内查找指定模板图像列表中的任意一个。</p><p><code>参数</code>：</p><ul><li><code>templates</code>：模板图像路径列表。</li><li><code>from_x</code>：查找区域左上角的相对X坐标，范围为0.0~1.0。</li><li><code>from_y</code>：查找区域左上角的相对Y坐标，范围为0.0~1.0。</li><li><code>to_x</code>：查找区域右下角的相对X坐标，范围为0.0~1.0。</li><li><code>to_y</code>：查找区域右下角的相对Y坐标，范围为0.0~1.0。</li><li><code>trace</code>：是否显示查找过程。</li></ul><p><code>返回值</code>：</p><ul><li><code>tuple[int, Box | None]</code>：查找成功，返回找到的模板图像在列表中的索引及其在窗口区域内的位置；查找失败，返回-1及<code>None</code>。</li></ul><h3 id="operator-click-point" tabindex="-1"><a class="header-anchor" href="#operator-click-point"><span>Operator.click_point</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">click_point</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                     x_offset: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, y_offset: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                     after_sleep: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>在游戏窗口区域内点击指定位置。</p><p><code>参数</code>：</p><ul><li><code>x</code>：点击位置的X坐标。 <ul><li><code>int</code>：绝对坐标，单位为像素。</li><li><code>float</code>：相对坐标，范围为0.0~1.0。</li></ul></li><li><code>y</code>：点击位置的Y坐标。 <ul><li><code>int</code>：绝对坐标，单位为像素。</li><li><code>float</code>：相对坐标，范围为0.0~1.0。</li></ul></li><li><code>x_offset</code>：点击位置的X偏移量，单位为像素。默认值为0。</li><li><code>y_offset</code>：点击位置的Y偏移量，单位为像素。默认值为0。</li><li><code>after_sleep</code>：点击后等待的时间，单位为秒。默认值为0。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：点击成功，返回<code>True</code>；点击失败，返回<code>False</code></li></ul><p><code>异常</code>：</p><ul><li><code>ValueError</code>：参数错误</li></ul><h3 id="operator-click-box" tabindex="-1"><a class="header-anchor" href="#operator-click-box"><span>Operator.click_box</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">click_box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(box: Box,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  x_offset: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, y_offset: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  after_sleep: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>在游戏窗口区域内点击指定位置。</p><p><code>参数</code>：</p><ul><li><code>box</code>：点击位置的区域。</li><li><code>x_offset</code>：点击位置的X偏移量，单位为像素。默认值为0。</li><li><code>y_offset</code>：点击位置的Y偏移量，单位为像素。默认值为0。</li><li><code>after_sleep</code>：点击后等待的时间，单位为秒。默认值为0。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：点击成功，返回<code>True</code>；点击失败，返回<code>False</code></li></ul><h3 id="operator-click-img" tabindex="-1"><a class="header-anchor" href="#operator-click-img"><span>Operator.click_img</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">click_img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(img_path: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   x_offset: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, y_offset: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   after_sleep: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>在游戏窗口区域内查找指定模板图像并点击其中心位置。</p><p><code>参数</code>：</p><ul><li><code>img_path</code>：模板图像路径。</li><li><code>x_offset</code>：点击位置的X偏移量，单位为像素。默认值为0。</li><li><code>y_offset</code>：点击位置的Y偏移量，单位为像素。默认值为0。</li><li><code>after_sleep</code>：点击后等待的时间，单位为秒。默认值为0。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：点击成功，返回<code>True</code>；点击失败，返回<code>False</code></li></ul><h3 id="operator-wait-img" tabindex="-1"><a class="header-anchor" href="#operator-wait-img"><span>Operator.wait_img</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">wait_img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(img_path: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  timeout: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  interval: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Box </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>在游戏窗口区域内等待指定模板图像出现。</p><p><code>参数</code>：</p><ul><li><code>img_path</code>：模板图像路径。</li><li><code>timeout</code>：等待超时时间，单位为秒。默认值为10秒。</li><li><code>interval</code>：每次查找间隔时间，单位为秒。默认值为0.5秒。</li></ul><p><code>返回值</code>：</p><ul><li><code>Box</code>：图像出现，返回模板图像在窗口区域内的位置；超时未出现，返回<code>None</code></li></ul><h3 id="operator-wait-any-img" tabindex="-1"><a class="header-anchor" href="#operator-wait-any-img"><span>Operator.wait_any_img</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">wait_any_img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(img_paths: list[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                      timeout: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                      interval: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> int</span></span></code></pre></div><p>在游戏窗口区域内等待指定模板图像列表中的任意一个出现。</p><p><code>参数</code>：</p><ul><li><code>img_paths</code>：模板图像路径列表。</li><li><code>timeout</code>：等待超时时间，单位为秒。默认值为10秒。</li><li><code>interval</code>：每次查找间隔时间，单位为秒。默认值为0.5秒。</li></ul><p><code>返回值</code>：</p><ul><li><code>int</code>：图像出现，返回找到的模板图像在列表中的索引；超时未出现，返回-1</li></ul><h3 id="operator-press-key" tabindex="-1"><a class="header-anchor" href="#operator-press-key"><span>Operator.press_key</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">press_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   presses: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   interval: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   wait: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>模拟按下指定键。</p><p><code>参数</code>：</p><ul><li><code>key</code>：要按下的键名称</li><li><code>presses</code>：按下次数。默认值为1。</li><li><code>interval</code>：每次按下间隔时间，单位为秒。默认值为0秒。</li><li><code>wait</code>：首次按下前等待的时间，单位为秒。默认值为0秒。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：按键成功，返回<code>True</code>；按键失败，返回<code>False</code></li></ul><h3 id="operator-hold-key" tabindex="-1"><a class="header-anchor" href="#operator-hold-key"><span>Operator.hold_key</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">hold_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, duration: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>模拟按住指定键一段时间。</p><p><code>参数</code>：</p><ul><li><code>key</code>：要按住的键名称</li><li><code>duration</code>：按住时间，单位为秒。默认值为0秒。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：按键成功，返回<code>True</code>；按键失败，返回<code>False</code></li></ul><h3 id="operator-sleep" tabindex="-1"><a class="header-anchor" href="#operator-sleep"><span>Operator.sleep</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(seconds: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>暂停程序执行一段时间。</p><p><code>参数</code>：</p><ul><li><code>seconds</code>：暂停时间，单位为秒。</li></ul><p><code>返回值</code>：</p><ul><li><code>None</code></li></ul><h3 id="operator-copy" tabindex="-1"><a class="header-anchor" href="#operator-copy"><span>Operator.copy</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(text: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Any</span></span></code></pre></div><p>将指定文本复制到系统剪贴板。</p><p><code>参数</code>：</p><ul><li><code>text</code>：要复制的文本。</li></ul><h3 id="operator-paste" tabindex="-1"><a class="header-anchor" href="#operator-paste"><span>Operator.paste</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">paste</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>模拟粘贴操作，将系统剪贴板中的文本粘贴到当前光标位置。</p><p><code>参数</code>：</p><ul><li>无</li></ul><p><code>返回值</code>：</p><ul><li><code>None</code></li></ul><h3 id="operator-move-rel" tabindex="-1"><a class="header-anchor" href="#operator-move-rel"><span>Operator.move_rel</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">move_rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x_offset: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, y_offset: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>模拟鼠标相对移动。</p><p><code>参数</code>：</p><ul><li><code>x_offset</code>：鼠标在X轴上的移动偏移量，单位为像素。</li><li><code>y_offset</code>：鼠标在Y轴上的移动偏移量，单位为像素。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：移动成功，返回<code>True</code>；移动失败，返回<code>False</code></li></ul><h3 id="operator-move-to" tabindex="-1"><a class="header-anchor" href="#operator-move-to"><span>Operator.move_to</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">move_to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, y: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, duration: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>模拟鼠标移动到指定位置。</p><p><code>参数</code>：</p><ul><li><code>x</code>：目标位置的X坐标。 <ul><li><code>int</code>：绝对坐标，单位为像素。</li><li><code>float</code>：相对坐标，范围为0.0~1.0。</li></ul></li><li><code>y</code>：目标位置的Y坐标。 <ul><li><code>int</code>：绝对坐标，单位为像素。</li><li><code>float</code>：相对坐标，范围为0.0~1.0。</li></ul></li><li><code>duration</code>：移动时间，单位为秒。默认值为0秒。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：移动成功，返回<code>True</code>；移动失败，返回<code>False</code></li></ul><h3 id="operator-scroll" tabindex="-1"><a class="header-anchor" href="#operator-scroll"><span>Operator.scroll</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">scroll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(distance: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>模拟鼠标滚轮滚动。</p><p><code>参数</code>：</p><ul><li><code>distance</code>：滚动距离。正值表示向上滚动，负值表示向下滚动。</li></ul><p><code>返回值</code>：</p><ul><li><code>bool</code>：滚动成功，返回<code>True</code>；滚动失败，返回<code>False</code></li></ul><h2 id="executable" tabindex="-1"><a class="header-anchor" href="#executable"><span>Executable</span></a></h2><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.operator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Operator)</span></span></code></pre></div><p><code>Executable</code> 仅继承自 <code>Operator</code>，无新增属性和方法。可直接创建实例使用。</p><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">executable </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre></div><h2 id="box" tabindex="-1"><a class="header-anchor" href="#box"><span>Box</span></a></h2><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@dataclasses</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dataclass</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.operator.Box</span></span></code></pre></div><p>表示一个矩形区域，包含位置和尺寸信息。<br> 属性</p><ul><li><code>left</code> (int)：矩形左上角的X坐标。</li><li><code>top</code> (int)：矩形左上角的Y坐标。</li><li><code>width</code> (int)：矩形的宽度。</li><li><code>height</code> (int)：矩形的高度。</li></ul><p>方法</p><h3 id="box-center" tabindex="-1"><a class="header-anchor" href="#box-center"><span>Box.center</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">property</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Box.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tuple[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre></div><p>计算并返回矩形的中心点坐标。</p><h2 id="region" tabindex="-1"><a class="header-anchor" href="#region"><span>Region</span></a></h2><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@dataclasses</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dataclass</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.operator.Region</span></span></code></pre></div><p>表示一个矩形区域，包含位置和尺寸信息。<br> 属性</p><ul><li><code>left</code> (int)：矩形左上角的X坐标。</li><li><code>top</code> (int)：矩形左上角的Y坐标。</li><li><code>width</code> (int)：矩形的宽度。</li><li><code>height</code> (int)：矩形的高度。</li></ul><p>方法</p><h3 id="region-tuple" tabindex="-1"><a class="header-anchor" href="#region-tuple"><span>Region.tuple</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">property</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Region.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">tuple</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tuple[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre></div><p>将区域信息转换为元组形式，返回 (left, top, width, height)。</p><h2 id="system-模块" tabindex="-1"><a class="header-anchor" href="#system-模块"><span>system 模块</span></a></h2><p>system 模块提供了与系统交互的功能，包括执行命令、检查进程、终止进程等操作。</p><h1 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法:</span></a></h1><h3 id="popen" tabindex="-1"><a class="header-anchor" href="#popen"><span>Popen</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SRACore.util.system.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Popen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(arg: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> list[</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           shell: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           **kwargs) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>使用子进程执行指定命令。是对<code>psutil.Popen</code>的封装。</p><p>然而<code>psutil.Popen</code>是对<code>subprocess.Popen</code>的封装。<br><code>参数</code>:</p><ul><li><code>arg</code>: 要执行的命令字符串或字符串列表。</li><li><code>shell</code>: 是否通过shell执行命令。默认值为<code>False</code>。</li><li><code>**kwargs</code>: 传递给<code>subprocess.Popen</code>的其他参数。</li></ul><p><code>返回值</code>:</p><ul><li><code>bool</code>: 命令执行成功，返回<code>True</code>；命令执行失败，返回<code>False</code></li></ul><h3 id="is-process-running" tabindex="-1"><a class="header-anchor" href="#is-process-running"><span>is_process_running</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SRACore.util.system.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">is_process_running</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(process_name: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>检查指定名称的进程是否正在运行。<br><code>参数</code>:</p><ul><li><code>process_name</code>: 要检查的进程名称。</li></ul><p><code>返回值</code>:</p><ul><li><code>bool</code>: 进程正在运行，返回<code>True</code>；进程未运行，返回<code>False</code></li></ul><h3 id="task-kill" tabindex="-1"><a class="header-anchor" href="#task-kill"><span>task_kill</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SRACore.util.system.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">task_kill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(process_name: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>终止指定名称的进程。<br><code>参数</code>:</p><ul><li><code>process_name</code>: 要终止的进程名称。</li></ul><p><code>返回值</code>:</p><ul><li><code>bool</code>: 进程终止成功，返回<code>True</code>；进程终止失败，返回<code>False</code></li></ul><h2 id="config-模块" tabindex="-1"><a class="header-anchor" href="#config-模块"><span>config 模块</span></a></h2><p>config 模块提供了配置文件管理的功能，包括加载、获取、设置和保存配置项等操作。</p><h1 id="类-1" tabindex="-1"><a class="header-anchor" href="#类-1"><span>类:</span></a></h1><h2 id="globalconfigmanager" tabindex="-1"><a class="header-anchor" href="#globalconfigmanager"><span>GlobalConfigManager</span></a></h2><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.config.GlobalConfigManager</span></span></code></pre></div><p>用于管理全局配置文件<code>globals.json</code>。</p><p>要使用<code>GlobalConfigManager</code>，除了SRA自身，其他位置不应通过构造函数创建实例。</p><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gcm </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> GlobalConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取单例实例</span></span></code></pre></div><p>一个<code>GlobalConfigManager</code>实例可调用以下方法：</p><h3 id="load" tabindex="-1"><a class="header-anchor" href="#load"><span>load</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GlobalConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>加载全局配置文件<code>globals.json</code>。<br> 如果文件不存在或无法解析，将使用默认值。<br> 如果发生错误（如文件不存在、JSON解析错误或类型错误），将打印错误信息并使用默认值。<br> 例如，如果文件不存在，将打印&quot;Global config file not found, using default values.&quot;。<br> 如果JSON解析错误，将打印&quot;Error decoding JSON from globals.json, using default values.&quot;。<br> 如果发生类型错误，将打印&quot;Error initializing GlobalConfig, using default values.&quot;。<br> 这些错误处理确保程序在配置文件有问题时仍能正常运行。<br> 该方法不会抛出异常，而是通过打印错误信息来通知用户。<br><code>返回值</code>:</p><ul><li><code>None</code></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>不应手动调用此方法，它在初始化时自动调用。</p></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>get</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GlobalConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, default: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">Any</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Any</span></span></code></pre></div><p>获取指定键的配置值。如果配置项不存在，则添加该项并返回默认值。<br><code>参数</code>:</p><ul><li><code>key</code>: 要获取的配置键。</li><li><code>default</code>: 如果键不存在，返回的默认值。默认值为<code>None</code></li></ul><p><code>返回值</code>:</p><ul><li><code>Any</code>: 配置值或默认值。</li></ul><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>set</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GlobalConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, value: Any) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>设置指定键的配置值。如果配置项不存在，则添加该项。<br><code>参数</code>:</p><ul><li><code>key</code>: 要设置的配置键。</li><li><code>value</code>: 要设置的配置值。</li></ul><h3 id="sync" tabindex="-1"><a class="header-anchor" href="#sync"><span>sync</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GlobalConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>将当前配置保存到全局配置文件<code>globals.json</code>。</p><h3 id="get-instance" tabindex="-1"><a class="header-anchor" href="#get-instance"><span>get_instance</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">classmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GlobalConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> GlobalConfigManager</span></span></code></pre></div><p>获取<code>GlobalConfigManager</code>的单例实例。如果实例不存在, 抛出异常。<br><code>返回值</code>:</p><ul><li><code>GlobalConfigManager</code>: 单例实例。</li></ul><p><code>异常</code>:</p><ul><li><code>RuntimeError</code>: 实例未初始化</li></ul><h2 id="configmanager" tabindex="-1"><a class="header-anchor" href="#configmanager"><span>ConfigManager</span></a></h2><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.config.ConfigManager</span></span></code></pre></div><p>用于管理指定路径的JSON配置文件。<br> 要创建<code>ConfigManager</code>，可调用其构造函数，传入配置文件路径。</p><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">config_manager </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> ConfigManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(config_path: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path)</span></span></code></pre></div><p>或使用<code>get_instance</code>获取单例实例。</p><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">config_manager </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre></div><p>除了SRA自身，其他位置不应通过构造函数创建实例。<br> 一个<code>ConfigManager</code>实例可调用以下方法：</p><h3 id="load-1" tabindex="-1"><a class="header-anchor" href="#load-1"><span>load</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(name: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>加载指定名称的配置文件。如果文件不存在或无法解析，将使用默认值。</p><p><code>参数</code>:</p><ul><li><code>name</code>: 要加载的配置文件名称（不含扩展名）。</li></ul><h3 id="get-1" tabindex="-1"><a class="header-anchor" href="#get-1"><span>get</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, default: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">Any</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Any</span></span></code></pre></div><p>获取指定键的配置值。如果配置项不存在，则添加该项并返回默认值。<br><code>参数</code>:</p><ul><li><code>key</code>: 要获取的配置键。</li><li><code>default</code>: 如果键不存在，返回的默认值。默认值为<code>None</code></li></ul><p><code>返回值</code>:</p><ul><li><code>Any</code>: 配置值或默认值。</li></ul><h3 id="set-1" tabindex="-1"><a class="header-anchor" href="#set-1"><span>set</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, value: Any) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>设置指定键的配置值。如果配置项不存在，则添加该项。<br><code>参数</code>:</p><ul><li><code>key</code>: 要设置的配置键。</li><li><code>value</code>: 要设置的配置值。</li></ul><h3 id="sync-1" tabindex="-1"><a class="header-anchor" href="#sync-1"><span>sync</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>将当前配置保存到配置文件。</p><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch"><span>switch</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(name: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span></code></pre></div><p>保存当前配置，切换到另一个配置文件。<br><code>参数</code>:</p><ul><li><code>name</code>: 要切换到的配置文件名称（不含扩展名）。</li></ul><h3 id="get-instance-1" tabindex="-1"><a class="header-anchor" href="#get-instance-1"><span>get_instance</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">classmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ConfigManager</span></span></code></pre></div><p>获取<code>ConfigManager</code>的单例实例。如果实例不存在, 抛出异常。<br><code>返回值</code>:</p><ul><li><code>ConfigManager</code>: 单例实例。</li></ul><p><code>异常</code>:</p><ul><li><code>RuntimeError</code>: 实例未初始化</li></ul><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete"><span>delete</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ConfigManager.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(name: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bool</span></span></code></pre></div><p>删除指定名称的配置文件。<br><code>参数</code>:</p><ul><li><code>name</code>: 要删除的配置文件名称（不含扩展名）。</li></ul><h2 id="const-模块" tabindex="-1"><a class="header-anchor" href="#const-模块"><span>const 模块</span></a></h2><p>const 模块定义了一些常量</p><h3 id="常量" tabindex="-1"><a class="header-anchor" href="#常量"><span>常量</span></a></h3><ul><li><code>RANDOM_TITLE</code> (str): 用于创建随机窗口标题的字符串列表。</li></ul><h2 id="encryption-模块" tabindex="-1"><a class="header-anchor" href="#encryption-模块"><span>encryption 模块</span></a></h2><p>encryption 模块提供了数据加密和解密的功能，使用Windows的DPAPI进行加密和解密操作。<br> 方法:</p><h3 id="win-encryptor" tabindex="-1"><a class="header-anchor" href="#win-encryptor"><span>win_encryptor</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SRACore.util.encryption.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">win_encryptor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(note: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, description: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, entropy: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span></span></code></pre></div><p>使用Windows DPAPI加密数据<br><code>参数</code>:</p><ul><li><code>note</code>: 要加密的字符串。</li><li><code>description</code>: 可选的描述字符串，默认为<code>None</code>。</li><li><code>entropy</code>: 可选的附加熵，默认为<code>None</code>。</li></ul><p><code>返回值</code>:</p><ul><li><code>str</code>: 加密后的字符串，使用Base64编码。</li></ul><h3 id="win-decryptor" tabindex="-1"><a class="header-anchor" href="#win-decryptor"><span>win_decryptor</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SRACore.util.encryption.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">win_decryptor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(encrypted_note: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, entropy: </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">-&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span></span></code></pre></div><p>使用Windows DPAPI解密数据<br><code>参数</code>:</p><ul><li><code>encrypted_note</code>: 要解密的Base64编码字符串。</li><li><code>entropy</code>: 可选的附加熵，默认为<code>None</code>。</li></ul><p><code>返回值</code>:</p><ul><li><code>str</code>: 解密后的字符串。</li></ul><h2 id="logger-模块" tabindex="-1"><a class="header-anchor" href="#logger-模块"><span>logger 模块</span></a></h2><p>logger 模块提供了日志记录的功能</p><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger"><span>logger</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.logger </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> logger</span></span></code></pre></div><p><code>logger</code> 是一个预配置的日志记录器实例，使用Python的<code>loguru</code>库进行日志记录。</p><h3 id="log-emitter" tabindex="-1"><a class="header-anchor" href="#log-emitter"><span>log_emitter</span></a></h3><div class="language-python" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.util.logger </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> log_emitter</span></span></code></pre></div><p><code>log_emitter</code> 是一个QObject子类，用于在Qt应用程序中转发日志消息到UI线程。<br><code>信号</code>:</p><ul><li><code>log_signal</code>: 当有新日志消息时发射，携带日志消息的格式化字符串</li></ul>`,297))])}const A=h(o,[["render",r]]),B=JSON.parse('{"path":"/develop/API.html","title":"API","lang":"zh-CN","frontmatter":{"title":"API","order":5,"icon":"box","author":"Shasnow","description":"API 此文档介绍StarRailAssistant（SRA）的API接口，涵盖鼠标事件、键盘事件、图像识别、窗口管理等模块的功能和用法。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-12T15:44:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Shasnow\\"}]}"],["meta",{"property":"og:url","content":"https://starrailassistant.top/develop/API.html"}],["meta",{"property":"og:site_name","content":"StarRailAssistant"}],["meta",{"property":"og:title","content":"API"}],["meta",{"property":"og:description","content":"API 此文档介绍StarRailAssistant（SRA）的API接口，涵盖鼠标事件、键盘事件、图像识别、窗口管理等模块的功能和用法。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-12T15:44:22.000Z"}],["meta",{"property":"article:author","content":"Shasnow"}],["meta",{"property":"article:modified_time","content":"2025-09-12T15:44:22.000Z"}]]},"git":{"createdTime":1750390626000,"updatedTime":1757691862000,"contributors":[{"name":"EveGlowLuna","username":"EveGlowLuna","email":"yy15502497613@outlook.com","commits":4,"url":"https://github.com/EveGlowLuna"},{"name":"Shasnow","username":"Shasnow","email":"yukikage@qq.com","commits":3,"url":"https://github.com/Shasnow"}]},"readingTime":{"minutes":14.05,"words":4214},"filePathRelative":"develop/API.md","autoDesc":true}');export{A as comp,B as data};
