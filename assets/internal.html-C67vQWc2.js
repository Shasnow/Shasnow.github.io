import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as i,o as t}from"./app-BIihljfW.js";const n={};function r(o,e){return t(),s("div",null,e[0]||(e[0]=[i('<div class="hint-container warning"><p class="hint-container-title">注意</p><p>本章节内容主要面向开发者和高级用户，普通用户可以跳过。<br> 本章节内容可能会随着SRA版本更新而变化。<br> 本章节内容可能涉及SRA源码编辑。</p></div><h2 id="任务执行" tabindex="-1"><a class="header-anchor" href="#任务执行"><span>任务执行</span></a></h2><p>SRA的任务执行基于任务队列，任务队列中的任务按顺序执行。<br> 主体逻辑位于 <code>SRACore/thread/task_thread.py</code> 中的 <code>TaskManager</code> 类。<br><code>TaskManager</code> 继承自QThread类，调度任务的执行。<br> 执行时，根据全局配置决定是执行多配置还是当前配置，</p><h2 id="任务" tabindex="-1"><a class="header-anchor" href="#任务"><span>任务</span></a></h2><p>任务均继承自 <code>SRACore/tasks/BaseTask.py</code> 中的 <code>BaseTask</code> 类。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.tasks.BaseTask.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">BaseTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Executable,</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">ABC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>属性：</p><ul><li><code>cm</code>: ConfigManager 对象，用于管理配置。</li><li><code>config</code>: 当前任务的配置字典。<br> 抽象方法：</li><li><code>def run(self) -&gt; bool</code>: 任务的执行逻辑，返回任务是否成功完成。</li></ul><h2 id="修改任务流程" tabindex="-1"><a class="header-anchor" href="#修改任务流程"><span>修改任务流程</span></a></h2><p>SRA的任务流程均存放于 <code>SRACore/tasks/</code>, 要修改任务流程，可以直接编辑对应的Python文件。</p><h2 id="添加一个任务" tabindex="-1"><a class="header-anchor" href="#添加一个任务"><span>添加一个任务</span></a></h2><h3 id="ui准备" tabindex="-1"><a class="header-anchor" href="#ui准备"><span>UI准备</span></a></h3><ol><li>准备任务的UI:<br> 使用 Qt Designer 设计一个Widget类型的UI，保存为 .ui 文件，存放在 <code>resources/ui</code> 目录下。</li><li>修改 <code>resources/ui/main.ui</code>:<br> 在 <code>main.ui</code> 左侧 <code>任务配置</code> 栏中添加新的任务, 并修改 checkBox 和 pushButton 的 objectName 为更有标识度的名字。<br> 例如: start_game_checkBox, start_game_pushButton</li><li>编译UI文件:<br> 在SRA根目录下运行以下命令，将 .ui 文件编译为 Python 文件，存放在 <code>SRACore/ui</code> 目录下。<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> built.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="编写组件" tabindex="-1"><a class="header-anchor" href="#编写组件"><span>编写组件</span></a></h3><p>在 <code>SRACore/component</code> 目录下创建一个新的 Python 文件，例如 <code>start_game.py</code>，并编写对应的组件类。<br> 组件类应继承自 <code>SRAComponent</code>，并实现必要的方法</p><h3 id="编写任务" tabindex="-1"><a class="header-anchor" href="#编写任务"><span>编写任务</span></a></h3><p>在 <code>SRACore/tasks</code> 目录下创建一个新的 Python 文件，例如 <code>StartGameTask.py</code>，并编写对应的任务类。<br> 任务类应继承自 <code>BaseTask</code>，并实现 <code>run</code> 方法。</p><h3 id="修改任务调度" tabindex="-1"><a class="header-anchor" href="#修改任务调度"><span>修改任务调度</span></a></h3><p>在 <code>SRACore/thread/task_thread.py</code> 中的 <code>TaskManager</code> 类中，修改<code>task_list</code>，添加新的任务调度逻辑。</p><h2 id="触发器" tabindex="-1"><a class="header-anchor" href="#触发器"><span>触发器</span></a></h2><p>触发器用于在特定条件下持续执行任务。示例：自动对话。<br> 触发器均继承自 <code>SRACore/triggers/BaseTrigger.py</code> 中的 <code>BaseTrigger</code> 类。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SRACore.triggers.BaseTrigger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">BaseTrigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Executable,</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">ABC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>属性：</p><ul><li><code>enabled</code>: 触发器是否启用。</li><li><code>name</code>: 触发器的名称。会显示在SRA的 “拓展/插件” 的 “拓展功能” 中</li><li><code>config</code>: 触发器的配置字典。将根据配置字段类型自动生成UI。<br> 抽象方法：</li><li><code>run(self) -&gt; bool</code>: 触发器的执行逻辑。</li></ul>',24)]))}const c=a(n,[["render",r]]),l=JSON.parse('{"path":"/develop/internal.html","title":"内部参考","lang":"zh-CN","frontmatter":{"title":"内部参考","icon":"code","order":7,"author":"Shasnow","description":"注意 本章节内容主要面向开发者和高级用户，普通用户可以跳过。 本章节内容可能会随着SRA版本更新而变化。 本章节内容可能涉及SRA源码编辑。 任务执行 SRA的任务执行基于任务队列，任务队列中的任务按顺序执行。 主体逻辑位于 SRACore/thread/task_thread.py 中的 TaskManager 类。 TaskManager 继承自Q...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内部参考\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-30T07:45:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Shasnow\\"}]}"],["meta",{"property":"og:url","content":"https://starrailassistant.top/develop/internal.html"}],["meta",{"property":"og:site_name","content":"StarRailAssistant"}],["meta",{"property":"og:title","content":"内部参考"}],["meta",{"property":"og:description","content":"注意 本章节内容主要面向开发者和高级用户，普通用户可以跳过。 本章节内容可能会随着SRA版本更新而变化。 本章节内容可能涉及SRA源码编辑。 任务执行 SRA的任务执行基于任务队列，任务队列中的任务按顺序执行。 主体逻辑位于 SRACore/thread/task_thread.py 中的 TaskManager 类。 TaskManager 继承自Q..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-30T07:45:07.000Z"}],["meta",{"property":"article:author","content":"Shasnow"}],["meta",{"property":"article:modified_time","content":"2025-08-30T07:45:07.000Z"}]]},"git":{"createdTime":1756539907000,"updatedTime":1756539907000,"contributors":[{"name":"Shasnow","username":"Shasnow","email":"yukikage@qq.com","commits":1,"url":"https://github.com/Shasnow"}]},"readingTime":{"minutes":1.99,"words":598},"filePathRelative":"develop/internal.md","autoDesc":true}');export{c as comp,l as data};
